@page "/cameras"
@using WebConfigurator.Clients
@inject IDialogService DialogService
@inject WebApiClient Client

<MudGrid Justify="Justify.FlexStart">
    <MudItem xs="12" Class="pb-4">
        <MudButton @onclick="OpenDialog" Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add">Добавить камеру</MudButton>
    </MudItem>
    <MudItem xs="3">
        <MudList Clickable="true" SelectedItemChanged="Callback">
            @foreach (var camera in _cameras)
            {
                <MudListItem Text="@camera.Name" Value="camera" Icon="@icon" IconSize="Size.Large"/>
            }
        </MudList>
    </MudItem>
    <MudItem xs="9">
        @if (_selectedCamera is not null)
        {
            <MudCard>
                <MudCardContent>
                    <MudTextField @bind-Value="_selectedCamera.Name" Label="Название" ReadOnly="true" Variant="Variant.Filled"/>
                    <MudTextField @bind-Value="_selectedCamera.ConnectionSettings.Hostname" Label="Адрес" ReadOnly="true" Variant="Variant.Filled"/>
                    <MudTextField @bind-Value="_selectedCamera.ConnectionSettings.Device" Label="Устройство" ReadOnly="true" Variant="Variant.Filled"/>
                </MudCardContent>
            </MudCard>
        }

    </MudItem>
</MudGrid>

<div style="position: fixed; bottom: 1rem; right: 1rem; width: 30rem; height: 24rem">
</div>

@code {
        const string path = "m23.944 12.13-2.928-1.604.009-.016 2.507-1.792L8.509.301a2.504 2.504 0 0 0-3.383 1.001L3.305 4.638a2.501 2.501 0 0 0 .99 3.388l6.406 3.632-1.772 5.315a1.499 1.499 0 0 1-1.423 1.026H1v-5H0v11h1v-5h6.507a2.497 2.497 0 0 0 2.372-1.709l1.71-5.129 6.519 3.696.595-1.09 2.928 1.604 2.314-4.24Zm-6.228 2.355L4.782 7.153a1.502 1.502 0 0 1-.598-2.035l1.821-3.336A1.506 1.506 0 0 1 7.326 1c.238 0 .479.057.701.177L21.67 8.821l-1.319.943-2.634 4.722Zm1.465-.597 1.356-2.485 2.051 1.123-1.356 2.484-2.051-1.123Z";

        const string icon = $@"<svg xmlns=""http://www.w3.org/2000/svg"" width=""36"" height=""36"" version=""1.0"" viewBox=""0 0 36 36""><path fill=""currentColor"" d=""{path}""/></svg>";


    private Camera? _selectedCamera;

    private IReadOnlyCollection<CameraInfo> _cameras = new CameraInfo[] { };

    protected override async Task OnInitializedAsync()
    {
        _cameras = await Client.GetCamerasAsync();
    }

    private async Task Callback(MudListItem obj)
    {
        var cameraInfo = obj.Value as CameraInfo;
        _selectedCamera = await Client.GetCameraAsync(cameraInfo.Id);
    }

    private async Task OpenDialog()
    {
        var closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Small, FullWidth = true };

        var dialog = await DialogService.ShowAsync<AddCameraDialog>("Добавить камеру", closeOnEscapeKey);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            _cameras = await Client.GetCamerasAsync();
        }
    }

}