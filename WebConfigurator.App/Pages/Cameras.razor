@page "/cameras"
@using WebConfigurator.Clients
@inject IDialogService DialogService
@inject WebApiClient Client

<MudGrid Justify="Justify.FlexStart">
    <MudItem xs="12" Class="pb-4">
        <MudButton @onclick="OpenDialog" Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add">Добавить камеру</MudButton>
    </MudItem>
    <MudItem xs="3">
        <MudList Clickable="true" SelectedItemChanged="Callback">
            @foreach (var camera in _cameras)
            {
                <MudListItem Text="@camera.Name" Value="camera" Icon="@icon" IconSize="Size.Large"/>
            }
        </MudList>
    </MudItem>
    <MudItem xs="9">
        @if (_selectedCamera is not null)
        {
            <MudCard>
                <MudCardContent>
                    <MudTextField @bind-Value="_selectedCamera.Name" Label="Название" ReadOnly="true" Variant="Variant.Filled"/>
                    <MudTextField @bind-Value="_selectedCamera.ConnectionSettings.Hostname" Label="Адрес" ReadOnly="true" Variant="Variant.Filled"/>
                    <MudTextField @bind-Value="_selectedCamera.ConnectionSettings.Device" Label="Устройство" ReadOnly="true" Variant="Variant.Filled"/>
                </MudCardContent>
            </MudCard>
        }

    </MudItem>
</MudGrid>

<div style="position: fixed; bottom: 1rem; right: 1rem; width: 30rem; height: 24rem">
</div>

@code {
        const string path = "M7.1 7.2c-2.4 6.6-2.4 6.6 1.6 7.7 2.1.6 4.4 1.1 5.1 1.1.6 0 1.2.4 1.2 1 0 1.4-3.3 1.2-5-.3-.8-.6-.7-.3.3.9 1.3 1.6 1.4 2.3.5 3.2-1.9 1.9-6.6 1.5-7.1-.6-.3-.9-.5.1-.5 2.3 0 2.2.2 3.2.5 2.2C4 23.5 5.2 23 7.6 23c2.3 0 3.8-.6 4.6-2 .7-1.1 1.8-2 2.5-2s1.3-.4 1.3-1c0-.5 1.3-.7 3-.4 2.2.5 3.1.2 3.6-1 .3-.9 1.4-1.6 2.4-1.6 2.1 0 4.4-2.4 3.8-4.1C28.4 9.7 14 5.1 10.2 5c-1.4 0-2.5.8-3.1 2.2zm14.2 1.9c5.7 1.7 6.6 2.3 5.6 3.5-.6.8-2 1.4-3 1.4-1.1 0-1.9.4-1.9 1 0 1.4-3.9 1.2-9.8-.5C7.3 13 7 12.8 7.6 10.2c1.2-5 .5-5 13.7-1.1z";

        const string icon = $@"<svg xmlns=""http://www.w3.org/2000/svg"" width=""36"" height=""36"" version=""1.0"" viewBox=""0 0 42 42""><path fill=""currentColor"" d=""{path}""/></svg>";


    private Camera? _selectedCamera;

    private IReadOnlyCollection<CameraInfo> _cameras = new CameraInfo[] { };

    protected override async Task OnInitializedAsync()
    {
        _cameras = await Client.GetCamerasAsync();
    }

    private async Task Callback(MudListItem obj)
    {
        var cameraInfo = obj.Value as CameraInfo;
        _selectedCamera = await Client.GetCameraAsync(cameraInfo.Id);
    }

    private async Task OpenDialog()
    {
        var closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Small, FullWidth = true };

        var dialog = await DialogService.ShowAsync<AddCameraDialog>("Добавить камеру", closeOnEscapeKey);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            _cameras = await Client.GetCamerasAsync();
        }
    }

}