@page "/cameras"
@using WebConfigurator.Clients
@inject IDialogService DialogService
@inject WebApiClient Client

<MudGrid Justify="Justify.FlexStart">
    <MudItem xs="12" Class="pb-4">
        <MudButton @onclick="OpenDialog" Variant="Variant.Outlined" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add">Добавить камеру</MudButton>
    </MudItem>
    <MudItem xs="3">
        <MudList Clickable="true" SelectedItemChanged="Callback">
            @foreach (var camera in _cameras)
            {
                <MudListItem Text="@camera.Name" Value="camera" Icon="@Icons.Material.Filled.CameraOutdoor"/>
            }
        </MudList>
    </MudItem>
    <MudItem xs="9">
        @if (_selectedCamera is not null)
        {
            <MudCard>
                <MudCardContent>
                    <MudTextField @bind-Value="_selectedCamera.Name" Label="Название" ReadOnly="true" Variant="Variant.Filled"/>
                    <MudTextField @bind-Value="_selectedCamera.ConnectionSettings.Hostname" Label="Адрес" ReadOnly="true" Variant="Variant.Filled"/>
                    <MudTextField @bind-Value="_selectedCamera.ConnectionSettings.Device" Label="Устройство" ReadOnly="true" Variant="Variant.Filled"/>
                </MudCardContent>
            </MudCard>
        }
        
    </MudItem>
</MudGrid>

<div style="position: fixed; bottom: 1rem; right: 1rem; width: 30rem; height: 24rem">
    <iframe src="https://app.tango.us/app/embed/673419d2-5268-4149-afe9-8183222fb1bf?skipCover=false&defaultListView=false&skipBranding=true" sandbox="allow-scripts allow-top-navigation-by-user-activation allow-popups allow-same-origin" security="restricted" title="How to Shorten URLs" width="100%" height="100%" referrerpolicy="strict-origin-when-cross-origin" frameborder="0" webkitallowfullscreen="webkitallowfullscreen" mozallowfullscreen="mozallowfullscreen" allowfullscreen="allowfullscreen"></iframe>
</div>

@code {
    private Camera? _selectedCamera;

    private IReadOnlyCollection<CameraInfo> _cameras = new CameraInfo[] { };

    protected override async Task OnInitializedAsync()
    {
        _cameras = await Client.GetCamerasAsync();
    }

    private async Task Callback(MudListItem obj)
    {
        var cameraInfo = obj.Value as CameraInfo;
        _selectedCamera = await Client.GetCameraAsync(cameraInfo.Id);
    }

    private async Task OpenDialog()
    {
        var closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Small, FullWidth = true };

        var dialog = await DialogService.ShowAsync<AddCameraDialog>("Добавить камеру", closeOnEscapeKey);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            _cameras = await Client.GetCamerasAsync();
        }
    }
}